---
# Custom Terminal theme.
- name: Get current Terminal profile.
  shell: defaults read com.apple.terminal 'Default Window Settings'
  register: terminal_theme
  changed_when: false
  check_mode: no

- name: add dracula theme to terminal.app #(must set as default manually)
  command: open ~/Documents/Developer/Repositories/dracula.terminal-app.git/Dracula.terminal
  changed_when: false
  when: "'Dracula' not in terminal_theme.stdout"

- name: Ensure dracula Terminal profile is set as default.
  shell: "{{ item }}"
  with_items:
    - defaults write com.apple.Terminal 'Default Window Settings' -string 'Dracula'
    - defaults write com.apple.Terminal 'Startup Window Settings' -string 'Dracula'
  changed_when: false
  when: "'Dracula ansi' not in terminal_theme.stdout"

- name: symlink dracula theme
  file:
    src: ~/Documents/Developer/Repositories/dracula.zsh.git/dracula.zsh-theme
    dest: "{{ lookup('env','ZSH') }}/themes/dracula.zsh-theme"
    state: link


###############################################################################
# Terminal & iTerm 2                                                          #
###############################################################################
  #    # Only use UTF-8 in Terminal.app
  #    # defaults write com.apple.terminal StringEncodings -array 4
  #
  #    # Use a modified version of the Solarized Dark theme by default in Terminal.app
  #    # osascript <<EOD
  #    #
  #    # tell application "Terminal"
  #    #
  #    #     local allOpenedWindows
  #    #     local initialOpenedWindows
  #    #     local windowID
  #    #     set themeName to "Solarized Dark xterm-256color"
  #    #
  #    #     (* Store the IDs of all the open terminal windows. *)
  #    #     set initialOpenedWindows to id of every window
  #    #
  #    #     (* Open the custom theme so that it gets added to the list
  #    #        of available terminal themes (note: this will open two
  #    #        additional terminal windows). *)
  #    #     do shell script "open '$HOME/init/" & themeName & ".terminal'"
  #    #
  #    #     (* Wait a little bit to ensure that the custom theme is added. *)
  #    #     delay 1
  #    #
  #    #     (* Set the custom theme as the default terminal theme. *)
  #    #     set default settings to settings set themeName
  #    #
  #    #     (* Get the IDs of all the currently opened terminal windows. *)
  #    #     set allOpenedWindows to id of every window
  #    #
  #    #     repeat with windowID in allOpenedWindows
  #    #
  #    #         (* Close the additional windows that were opened in order
  #    #            to add the custom theme to the list of terminal themes. *)
  #    #         if initialOpenedWindows does not contain windowID then
  #    #             close (every window whose id is windowID)
  #    #
  #    #         (* Change the theme for the initial opened terminal windows
  #    #            to remove the need to close them in order for the custom
  #    #            theme to be applied. *)
  #    #         else
  #    #             set current settings of tabs of (every window whose id is windowID) to settings set themeName
  #    #         end if
  #    #
  #    #     end repeat
  #    #
  #    # end tell
  #    #
  #    # EOD
  #
  #    # Enable “focus follows mouse” for Terminal.app and all X11 apps
  #    # i.e. hover over a window and start typing in it without clicking first
  #    #defaults write com.apple.terminal FocusFollowsMouse -bool true
  #    #defaults write org.x.X11 wm_ffm -bool true
  #
  #    # See: https://security.stackexchange.com/a/47786/8918
- name: Terminal - Enable Secure Keyboard Entry in Terminal.app
  command: "defaults write com.apple.terminal SecureKeyboardEntry -bool {{ macos_configs.terminal.is_secure_keyboard_entry }}"
  #
  #    # Disable the annoying line marks
  #    # defaults write com.apple.Terminal ShowLineMarks -int 0
  #
  #    # Install the Solarized Dark theme for iTerm
  #    #open "${HOME}/init/Solarized Dark.itermcolors"
  #
- name: Terminal - Don’t display the annoying prompt when quitting iTerm
  command: "defaults write com.googlecode.iterm2 PromptOnQuit -bool {{ macos_configs.terminal.is_prompt_on_quit }}"

